Hot reloading: web will update realtime without reloading 
Babel compiler: a library support using different versions of JS
Webpack: a tool helps compress project
================================================================
./: current folder
../: parent folder
================================================================
set props as number to child component:
    1. set a variable for it (E.g: let num = 9)
    2. written in {} (age = {26}) 
=> the same for booleans, arrays
================================================================
array.push(obj) => add as the last item
array.unshift(obj) => add as the first item
================================================================
React fragment: <React.Fragment>...</React.Fragment>
    - shortage syntax: <></>
================================================================
- React component = template + js logic
    + template is basically an html code block
    + template support write js inside
================================================================
In return, can render a variable to screen using {} (E.g: {test}) but if test is an object, it's going to be error 
-> Can use JSON.stringtify() to change object to string and then be rendered to screen but it'll be the EXACT STRING 
E.g: 
    let test = { name: 'Huy', age: 45}
    return(
        {JSON.stringtify(test)}
    )
    //Output: { name: 'Huy', age: 45}
- if test is a boolean variable it'll not be render to screen and there'll be no errror
=> DON'T PRINT A VARIABLE TO SCREEN, if want to check, use console.log() instead
================================================================
HOOK in stateless component
- using useState
    const [isShown, setShowHide] = useState(true)
    - isShown is a variable with value true
    - setShowHide is a function to update isShown
================================================================
ASSYNC/AWAIT
    - 